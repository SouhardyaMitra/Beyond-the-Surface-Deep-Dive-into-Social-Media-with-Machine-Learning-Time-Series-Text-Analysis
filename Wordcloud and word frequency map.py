# -*- coding: utf-8 -*-
"""Sentiment analysis omega.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G5jC3ArOKLaSKbZgHbjQhw3MS9zAsHWP
"""

pip install wordcloud

from wordcloud import WordCloud, STOPWORDS
import matplotlib.pyplot as plt

import pandas as pd

data = pd.read_csv("new_dff.csv")

tweets_string = " ".join(data["Status.text"].tolist())

wordcloud= WordCloud(width=10000, height=10000, random_state=1000, background_color='white', stopwords= None, min_font_size=10).generate(tweets_string)

def plot_speech(wordcloud):
  #set lot size 16 x 16
  plt.figure(figsize= (16,16))
  #display the word cloud
  plt.imshow(wordcloud)
  plt.axis("off")

#plot the word cloud
plot_speech(wordcloud)

# prompt: How to remove all urls, special characters and hashtags from tweets_string

import re

tweets_string = re.sub(r'http\S+', ' ', tweets_string)  # remove URLs
tweets_string = re.sub(r'[^A-Za-z0-9]+', ' ', tweets_string)  # remove special characters
tweets_string = re.sub(r'#', '', tweets_string)  # remove hashtags
tweets_string = re.sub(r'\d+', '',tweets_string)
unwanted_words = ["a", "and", "the", "of", "in", "to", "on", "for", "at", "with", "by", "from", "up", "down", "left", "right", "back", "forth", "over", "under", "around", "through", "out", "into", "onto", "off", "above", "below", "between", "among", "past", "around", "near", "far", "here", "there", "everywhere", "anywhere", "nowhere"]

# Remove unwanted words from the tweets_string
for word in unwanted_words:
  tweets_string = tweets_string.replace(" " + word + " ", " ")

# prompt: frequency plot of words in tweets_string

from collections import Counter

# Create a dictionary of word frequencies
word_counts = Counter(tweets_string.split())


# Plot the word frequencies
plt.figure(figsize=(200, 50))
plt.bar(word_counts.keys(), word_counts.values())
plt.xlabel("Word")
plt.ylabel("Frequency")
plt.title("Frequency Plot of Words in Tweets")
plt.xticks(rotation=90)
plt.show()

# Create a frequency table of word counts
word_counts = Counter(tweets_string.split())

# Print the frequency table
print(word_counts)

# Create a dictionary of word frequencies
word_counts = Counter(tweets_string.split())

# Create a DataFrame of word counts
df = pd.DataFrame.from_dict(word_counts, orient="index", columns=["Count"])

# Print the DataFrame
print(df)